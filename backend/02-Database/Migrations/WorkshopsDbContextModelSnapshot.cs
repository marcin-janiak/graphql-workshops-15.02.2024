// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using _02_Database;

#nullable disable

namespace _02_Database.Migrations
{
    [DbContext(typeof(WorkshopsDbContext))]
    partial class WorkshopsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GroupUserDevice", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserDevicesDeviceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserDevicesUserId")
                        .HasColumnType("uuid");

                    b.HasKey("GroupId", "UserDevicesDeviceId", "UserDevicesUserId");

                    b.HasIndex("UserDevicesDeviceId", "UserDevicesUserId");

                    b.ToTable("GroupUserDevice");

                    b.HasData(
                        new
                        {
                            GroupId = new Guid("6ba61df8-caf1-974e-0d63-891e2cac8056"),
                            UserDevicesDeviceId = new Guid("066d814c-ccee-4564-ab76-904cd6270f08"),
                            UserDevicesUserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad")
                        },
                        new
                        {
                            GroupId = new Guid("6ba61df8-caf1-974e-0d63-891e2cac8056"),
                            UserDevicesDeviceId = new Guid("fcaa94ae-c920-7af4-2ba2-fba0b11247fd"),
                            UserDevicesUserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad")
                        },
                        new
                        {
                            GroupId = new Guid("6ba61df8-caf1-974e-0d63-891e2cac8056"),
                            UserDevicesDeviceId = new Guid("e84e8b78-400b-1a75-3cfc-8a9dec836df8"),
                            UserDevicesUserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad")
                        },
                        new
                        {
                            GroupId = new Guid("4357bedd-20db-25d5-c7a8-22fd641151e6"),
                            UserDevicesDeviceId = new Guid("0197cc7b-e64d-e562-ebf7-7af1d33993eb"),
                            UserDevicesUserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad")
                        },
                        new
                        {
                            GroupId = new Guid("4357bedd-20db-25d5-c7a8-22fd641151e6"),
                            UserDevicesDeviceId = new Guid("8b5cd8f5-b94e-1307-a0d9-21e474199943"),
                            UserDevicesUserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad")
                        },
                        new
                        {
                            GroupId = new Guid("4357bedd-20db-25d5-c7a8-22fd641151e6"),
                            UserDevicesDeviceId = new Guid("11f94ef4-83ca-9a69-440e-d4deb91de2e3"),
                            UserDevicesUserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad")
                        },
                        new
                        {
                            GroupId = new Guid("edf0867e-c3a1-29b3-2070-6884af130704"),
                            UserDevicesDeviceId = new Guid("66eab3b8-57e9-7913-8214-a9f2e5deaf24"),
                            UserDevicesUserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad")
                        },
                        new
                        {
                            GroupId = new Guid("edf0867e-c3a1-29b3-2070-6884af130704"),
                            UserDevicesDeviceId = new Guid("bb867d7f-3d37-c6d4-1885-3984dd3cdda9"),
                            UserDevicesUserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad")
                        },
                        new
                        {
                            GroupId = new Guid("edf0867e-c3a1-29b3-2070-6884af130704"),
                            UserDevicesDeviceId = new Guid("02b38e71-42b7-29ae-47a0-49ac20a68cd8"),
                            UserDevicesUserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad")
                        });
                });

            modelBuilder.Entity("_02_Domain.Device", b =>
                {
                    b.Property<Guid>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("jsonb")
                        .HasDefaultValueSql("'{}'::jsonb");

                    b.HasKey("DeviceId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            DeviceId = new Guid("066d814c-ccee-4564-ab76-904cd6270f08"),
                            DeviceType = 3,
                            InstallationId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "leopold.info",
                            Payload = "{\"$\":\"Thermometer\",\"DeviceId\":\"066d814c-ccee-4564-ab76-904cd6270f08\",\"InstallationId\":\"00000000-0000-0000-0000-000000000000\",\"SoftwareVersion\":\"0.0.1\"}"
                        },
                        new
                        {
                            DeviceId = new Guid("fcaa94ae-c920-7af4-2ba2-fba0b11247fd"),
                            DeviceType = 3,
                            InstallationId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "gwen.info",
                            Payload = "{\"$\":\"Thermometer\",\"DeviceId\":\"fcaa94ae-c920-7af4-2ba2-fba0b11247fd\",\"InstallationId\":\"00000000-0000-0000-0000-000000000000\",\"SoftwareVersion\":\"0.0.1\"}"
                        },
                        new
                        {
                            DeviceId = new Guid("e84e8b78-400b-1a75-3cfc-8a9dec836df8"),
                            DeviceType = 3,
                            InstallationId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "gene.name",
                            Payload = "{\"$\":\"Thermometer\",\"DeviceId\":\"e84e8b78-400b-1a75-3cfc-8a9dec836df8\",\"InstallationId\":\"00000000-0000-0000-0000-000000000000\",\"SoftwareVersion\":\"0.0.1\"}"
                        },
                        new
                        {
                            DeviceId = new Guid("0197cc7b-e64d-e562-ebf7-7af1d33993eb"),
                            DeviceType = 3,
                            InstallationId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "lelah.biz",
                            Payload = "{\"$\":\"Thermometer\",\"DeviceId\":\"0197cc7b-e64d-e562-ebf7-7af1d33993eb\",\"InstallationId\":\"00000000-0000-0000-0000-000000000000\",\"SoftwareVersion\":\"0.0.1\"}"
                        },
                        new
                        {
                            DeviceId = new Guid("8b5cd8f5-b94e-1307-a0d9-21e474199943"),
                            DeviceType = 3,
                            InstallationId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "marques.info",
                            Payload = "{\"$\":\"Thermometer\",\"DeviceId\":\"8b5cd8f5-b94e-1307-a0d9-21e474199943\",\"InstallationId\":\"00000000-0000-0000-0000-000000000000\",\"SoftwareVersion\":\"0.0.1\"}"
                        },
                        new
                        {
                            DeviceId = new Guid("11f94ef4-83ca-9a69-440e-d4deb91de2e3"),
                            DeviceType = 3,
                            InstallationId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "manuela.biz",
                            Payload = "{\"$\":\"Thermometer\",\"DeviceId\":\"11f94ef4-83ca-9a69-440e-d4deb91de2e3\",\"InstallationId\":\"00000000-0000-0000-0000-000000000000\",\"SoftwareVersion\":\"0.0.1\"}"
                        },
                        new
                        {
                            DeviceId = new Guid("66eab3b8-57e9-7913-8214-a9f2e5deaf24"),
                            DeviceType = 3,
                            InstallationId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "nestor.name",
                            Payload = "{\"$\":\"Thermometer\",\"DeviceId\":\"66eab3b8-57e9-7913-8214-a9f2e5deaf24\",\"InstallationId\":\"00000000-0000-0000-0000-000000000000\",\"SoftwareVersion\":\"0.0.1\"}"
                        },
                        new
                        {
                            DeviceId = new Guid("bb867d7f-3d37-c6d4-1885-3984dd3cdda9"),
                            DeviceType = 3,
                            InstallationId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "ilene.name",
                            Payload = "{\"$\":\"Thermometer\",\"DeviceId\":\"bb867d7f-3d37-c6d4-1885-3984dd3cdda9\",\"InstallationId\":\"00000000-0000-0000-0000-000000000000\",\"SoftwareVersion\":\"0.0.1\"}"
                        },
                        new
                        {
                            DeviceId = new Guid("02b38e71-42b7-29ae-47a0-49ac20a68cd8"),
                            DeviceType = 3,
                            InstallationId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "bernie.biz",
                            Payload = "{\"$\":\"Thermometer\",\"DeviceId\":\"02b38e71-42b7-29ae-47a0-49ac20a68cd8\",\"InstallationId\":\"00000000-0000-0000-0000-000000000000\",\"SoftwareVersion\":\"0.0.1\"}"
                        });
                });

            modelBuilder.Entity("_02_Domain.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6ba61df8-caf1-974e-0d63-891e2cac8056"),
                            Name = "Lithuania",
                            OwnerId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad")
                        },
                        new
                        {
                            Id = new Guid("4357bedd-20db-25d5-c7a8-22fd641151e6"),
                            Name = "Belarus",
                            OwnerId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad")
                        },
                        new
                        {
                            Id = new Guid("edf0867e-c3a1-29b3-2070-6884af130704"),
                            Name = "Cocos (Keeling) Islands",
                            OwnerId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad")
                        });
                });

            modelBuilder.Entity("_02_Domain.UserDevice", b =>
                {
                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeviceId", "UserId");

                    b.ToTable("UserDevices");

                    b.HasData(
                        new
                        {
                            DeviceId = new Guid("066d814c-ccee-4564-ab76-904cd6270f08"),
                            UserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad"),
                            Alias = "leopold.info"
                        },
                        new
                        {
                            DeviceId = new Guid("fcaa94ae-c920-7af4-2ba2-fba0b11247fd"),
                            UserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad"),
                            Alias = "gwen.info"
                        },
                        new
                        {
                            DeviceId = new Guid("e84e8b78-400b-1a75-3cfc-8a9dec836df8"),
                            UserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad"),
                            Alias = "gene.name"
                        },
                        new
                        {
                            DeviceId = new Guid("0197cc7b-e64d-e562-ebf7-7af1d33993eb"),
                            UserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad"),
                            Alias = "lelah.biz"
                        },
                        new
                        {
                            DeviceId = new Guid("8b5cd8f5-b94e-1307-a0d9-21e474199943"),
                            UserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad"),
                            Alias = "marques.info"
                        },
                        new
                        {
                            DeviceId = new Guid("11f94ef4-83ca-9a69-440e-d4deb91de2e3"),
                            UserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad"),
                            Alias = "manuela.biz"
                        },
                        new
                        {
                            DeviceId = new Guid("66eab3b8-57e9-7913-8214-a9f2e5deaf24"),
                            UserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad"),
                            Alias = "nestor.name"
                        },
                        new
                        {
                            DeviceId = new Guid("bb867d7f-3d37-c6d4-1885-3984dd3cdda9"),
                            UserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad"),
                            Alias = "ilene.name"
                        },
                        new
                        {
                            DeviceId = new Guid("02b38e71-42b7-29ae-47a0-49ac20a68cd8"),
                            UserId = new Guid("f2e9e523-e78f-436d-b7b1-7baa330c4dad"),
                            Alias = "bernie.biz"
                        });
                });

            modelBuilder.Entity("GroupUserDevice", b =>
                {
                    b.HasOne("_02_Domain.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_02_Domain.UserDevice", null)
                        .WithMany()
                        .HasForeignKey("UserDevicesDeviceId", "UserDevicesUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_02_Domain.UserDevice", b =>
                {
                    b.HasOne("_02_Domain.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });
#pragma warning restore 612, 618
        }
    }
}
